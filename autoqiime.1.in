.\" Authors: Andre Masella
.TH autoqiime 1 "Februrary 2012" "1.3" "USER COMMANDS"
.SH NAME
autoqiime \- Automation toolkit for QIIME
.SH SYNOPSIS
.B autoqiime
.I input.aq
.SH DESCRIPTION
AutoQIIME is a way of automating tedious and error-prone analysis with the QIIME toolkit. Given a file of input data and analyses, it generates a \fBMakefile\fR to perform the analyses. Some analyses make use of
.BR R (1)
and additional R packages may need to be installed from CRAN. This can be done using
.BR aq-inst-cran (1).
.SH OPTIONS
.TP
input.aq
The input XML configuration file.
.SH WORKFLOW
Normally, one creates a input file with a \fB.aq\fR extension. After running AutoQIIME, a directory with a \fB.qiime\fR extension will be created with \fBMakefile\fR, \fBmapping.txt\fR, \fBmapping.extra\fR and possibly others depending on the analyses selected. In this directory, invoking \fBmake\fR will analysis. Normally, each analysis is done in the order specified in the original file, but this can be overriden by invoking \fBmake \fItarget\fR where \fItarget\fR is the output file desired (e.g., \fBotu_table.txt\fR).

If \fBmake\fR is interrupted, invoking it again will continue, repeating only the last command. Furthermore, if input files are changed, \fBmake\fR will attempt to return the minimum number of commands needed to update the analysis. Sometimes, this does not work as expected and deleting \fBseq.fasta\fR will guarantee all files will be rebuilt.
.SH CONFIGURATION FILE
Included is a sample configuration file with all possible analyses enabled. The configuration file has three components: definitions, assemblies, and analyses. File will look like this.

.B <?xml version="1.0"?>
.br
.B <autoqiime version="@VERSION@" \fR[\fBotu-method="\fImethod\fB"\fR]\fB \fR[\fBverbose="\fIvalue\fB"\fR]\fB \fR[\fBalign-method="\fIvalue\fB"\fR]\fB>
.br
.I Definitions
.br
.I Assemblies
.br
.I Analyses
.br
.B </autoqiime>

The version is used to check that a file is not newer than the version of AutoQIIME being used. The method used to pick OTUs can also be defined. Currently, that is \fBuclust\fR, or \fBcdhit\fR, the default. They can also be prefixed by \fBraw-\fR to call them directly instead of using \fBpick_otus.py\fR from QIIME. By default, AutoQIIME will try to be quiet and hide the (ugly) commands used to do the analysis. If you wish to see them, set \fBverbose="true"\fR or run \fBmake V=\fR. The alignment method used can be specified with \fBalign-method\fR as one of \fBinfernal\fR, \fBmuscle\fR, and \fBpynast\fR; the default is \fBinfernal\fR.

Definitions are a list of properties associated with the samples. These are usual physical or chemical information such as sampling time, pH, temperature, humidity, and location. As many properties as needed can be specified and each property can have a type so that incorrect information cannot be entered (e.g., enforcing that "year" be a whole number).

Assemblies are descriptions of the samples. AutoQIIME can automatically assemble pair-end Illumina FASTQ data using
.BR pandaseq (1)
or read data from FASTA files. In either case, a single file might contain multiple samples multiplexed. The format of this section allows all the input files to be specified and provide information about how to separate samples and the properties, defined above, to be associated with each sample.

Finally, the file lists the analyses to be performed. AutoQIIME will do the analyses in the order specified. Some analyses can be repeated with different parameters and some can be specified only once.
.TP
\fB<!-- \fIcomment\fB -->\fR
This is a comment and will be ignored.
.TP
\fB<include>\fIfilename\fB</include>\fR
Includes the contents of another file as if they were typed in the location where this command is. This may be used anywhere in the configuration file and may be used multiple times. A file must not include itself, directly or indirectly.
.TP
\fB<def name="\fIname\fB" \fR[\fBtype="\fItype\fB"\fR]\fB/>\fR
The configration file must specify all the types of data we intend to associate with the samples. For instance, if we collected the collected the samples from different times, or different environments, or different substrates, then we define those here. Each definition can have a type. The type \fBd\fR is a decimal number, the type \fBi\fR is an integer, the type \fBs\fR is for text. If absent, the type is assumed to be \fBs\fR. The names \fBColour\fR and \fBDescription\fR are used by certain analyses. For each definition supplied, each sample must have a part \fIname\fB="\fIvalue\fB"\fR where \fIvalue\fR is specific to each sample.
.TP
\fB<fasta file="\fIfile.fasta\fB">\fR...\fB</fasta>\fR
Existing FASTA files can be used as sources for sequences. This file may be compressed with
.BR gzip "(1) or"
.BR bzip2 (1).
Sequences must be renamed to be compliant with QIIME's naming conventions. A single FASTA file can contain many samples, if desired. For each sample, include \fB<sample regex="\fIregex\fB" \fR[\fBlimit="\fIlimit\fB"\fR]\fB \fIdefs\fB/>\fR where \fIdefs\fR includes a value for each definition noted above. To only allow some of the sequences, set \fIlimit\fR to the desired number of sequences.
To separate out multiple samples in each file, \fIregex\fR specifies a regular expression, described in
.BR regex (7),
and any sequences with FASTA headers matching that regular expression will be associated with that sample. To match all sequences, specify \fBregex="."\fR. If the sequences have a keyword, specifying it should be sufficient. For instance, all the sequences starting with \fBSALT\fR by specifying \fBregex="^SALT"\fR or only sequences with a numeric identifier by saying \fBregex="^[0-9]*$"\fR.
.TP
\fB<panda forward="\fIforward.fastq\fB" reverse="\fIreverse.fastq\fB" version="\fIversion\fB" \fR[\fBfprimer="\fIACT...\fB"\fR]\fB \fR[\fBrprimer="\fITAG...\fB"\fR]\fB \fR[\fBfprimer="\fIACT...\fB"\fR]\fB>\fR...\fB</panda>\fR
Assemble sequences using PANDAseq, if installed. Two files, the forward and reverse reads, must be supplied and they may be compressed with
.BR gzip "(1) or"
.BR bzip2 (1).
Optionally, the forward and reverse primers can be specified as either a nucleotide string, which can contain degenerate nucleotides (e.g., \fBW\fR), or, the number bases to trim from the read. Primer names can also be specified from a database, stored in \fB@prefix@/share/@PACKAGE@/primers.lst\fR, either name or \fB#\fR followed by the name to use the length of that primer.

The version of the CASAVA pipeline that generated the sequences must be specified. If the sequences are in the “old” Illumina format (i.e., not FASTQ), specify \fBversion="1.3"\fR and they will be converted. The newest sequences with PHRED+33-style quality scores are \fBversion="1.8"\fR. Versions 1.4 through 1.7 have identical data formats. If unsure, examine the data files. If every entry is one line, then it is version 1.3. If the quality scores have of many sequences have long stretches of \fBB\fR at the end, the it is version 1.4. If they quality scores have many stretches of \fB#\fR, then it is 1.8.

Since read files are often multiplexed, multiple samples can be specified. For each sample, include \fB<sample tag="\fItag\fB" \fR[\fBlimit="\fIlimit\fB"\fR]\fB \fIdefs\fB/>\fR where \fIdefs\fR includes a value for each definition noted above. Specify the 6 nucleotide Illumina sequencing bar code as \fItag\fR. To only allow some of the sequences, set \fIlimit\fR to the desired number of sequences.
.TP
\fB<alpha/>\fR
Do a basic alpha diversity analysis (i.e., QIIME's Chao1 curves).
.TP
\fB<beta \fR[\fBlevel="\fIlevel\fB"\fR]\fB \fR[\fBsize="\fIsize\fB"\fR]\fB \fR[\fBtaxa="\fIdepth\fB"\fR]\fB/>\fR
Do a QIIME beta diversity analysis and produce biplots and bubble plots. QIIME normally uses summarised taxa for the plots, so the taxonomic level can be specified; if it is omitted, OTUs are used instead. The library may be rarefied to a particular by specifying \fIsize\fR or it may be set to \fBauto\fR to use the smallest sample size; if not specified, the library is not rarefied, which is probably incorrect. Specifying \fItaxa\fR can limit the number of taxa the appear in the biplot; the default is 10 and \fBall\fR can specified if desired.
.TP
\fB<blast \fR[\fBtitle="\fItitle\fB"\fR]\fB/>\fR
Build a BLAST database over the sequences. This requires
.BR formatdb (1)
to be installed. A script called \fBblast\fR will be produced that will invoke
.BR blastall (1)
pointing to the appropriate database. The database may optionally be given a friendly name, \fItitle\fR. If one is not provided, it will be inferred from the file name.
.TP
\fB<compare level="\fIlevel\fB"/>\fR
Compare libraries on a plot to see if one is a superset of another. This is useful if one sample which is (possibly) a subsample of another. This uses summarised taxa, not OTUs, so the taxonomic level for the analysis must be specified.
.TP
\fB<duleg/>\fR
Compute Dufrene-Legendre indicator species analysis in R. For more information, see
.BR aq-duleg (1).
.TP
\fB<mrpp/>\fR
Compute Multi Response Permutation Procedure of within- versus among-group dissimilarities in R. For more information, see
.BR aq-mrpp (1).
.TP
\fB<nmf-concordance/>\fR
Create a concordance plot for non-negative matrix factorization. The actual NMF analysis, described below, requires a degree and a concordance plot is needed which will show the suitability of a particular degree for the data. The degrees that appear as local minima in the concordance plot are suitable to try for NMF analysis. See
.BR aq-nmf-concordance (1)
for more information.
.TP
\fB<nmf degree="\fIdegree\fB"/>\fR
Do a non-negative matrix factorization of the data creating \fIdegree\fR bases, where this degree has been selected from the concordance plot generated above. For more information, see
.BR aq-nmf (1).
.TP
\fB<pca/>\fR
Perform principal components in R using the numeric variables supplied in the definitions. While QIIME's biplots use Unifrac distances, this PCA uses the taxa information and any numeric supplemental information.
.TP
\fB<qualityanal/>\fR
Produce some data on the quality of the raw Illumina reads. This only applies to reads specified to PANDAseq. For more information, see
.BR aq-qualityanal (1).
.TP
\fB<rankabundance/>\fR
Make a rank-abundance plot using QIIME.
.TP
\fB<uchime \fR[\fBprofile="\fIprofile\fB"\fR]\fB/>\fR
Do chimera checking with UCHIME. Since the parameters vary based on the type of DNA, you can specify certain \fIprofile\fR to be one of \fBv3-stringent\fR, or \fBv3-relaxed\fR.
.TP
\fB<unifrac-mrpp \fR[\fBlevel="\fIlevel\fB"\fR]\fB/>\fR
Compute Multi Response Permutation Procedure of within- versus among-group dissimilarities in R. For more information, see
.BR aq-mrpp-unifrac (1).
The library may be rarefied to a particular by specifying \fIsize\fR or it may be set to \fBauto\fR to use the smallest sample size; if not specified, the library is not rarefied, which is probably incorrect.
.TP
\fB<withseqs/>\fR
Produce an OTU table with the representatives sequences in a final column.
.SH ENVIRONMENT VARIABLES
.TP
QIIME_PREFIX
Prefix before QIIME commands, used for special installations such as MacQIIME or BioLinux. (e.g., \fBQIIME_PREFIX="macqiime "\fR for MacQIIME, or \fBQIIME_PREFIX="qiime "\fR for BioLinux)
.TP
INFERNAL_MODEL
Full path to the alignment Infernal model, usually \fBseed.16s.reference_model.sto\fR.
.SH SEE ALSO
\fB@prefix@/share/doc/@PACKAGE@/sample.aq\fR,
\fB@prefix@/share/@PACKAGE@/primers.lst\fR,
.BR aqxs (1),
.BR aq-inst-cran (1),
.BR pandaseq (1),
.BR make (1).

The following are components used by AutoQIIME or supplemental tools:
.BR aq-base (1),
.BR aq-biplot (1),
.BR aq-bubbleplot (1),
.BR aq-cmplibs (1),
.BR aq-count-n (1),
.BR aq-estimateq (1),
.BR aq-duleg (1),
.BR aq-demux-illumina (1),
.BR aq-fasta-length (1),
.BR aq-fastq2oldillumina (1),
.BR aq-filter-fastq-known (1),
.BR aq-joinn (1),
.BR aq-libcontrib (1),
.BR aq-marry-illumina-index (1),
.BR aq-mkrepset (1),
.BR aq-mrpp (1),
.BR aq-nmf (1),
.BR aq-nmf-concordance (1),
.BR aq-oldillumina2fastq (1),
.BR aq-otu2lnotu (1),
.BR aq-otu2pcord (1),
.BR aq-otubinner (1),
.BR aq-otuhistogram (1),
.BR aq-otunolineage (1),
.BR aq-otuplothistogram (1),
.BR aq-otusum (1),
.BR aq-otutop (1),
.BR aq-otuwithseqs (1),
.BR aq-pca (1),
.BR aq-pretendsummarize (1),
.BR aq-qualhisto (1),
.BR aq-qualityanal (1),
.BR aq-rareotuwithlineage (1),
.BR aq-sort-fasta (1),
.BR aq-syntheticfastq (1).
