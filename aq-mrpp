#!/usr/bin/env Rscript
options(error = quote(dump.frames("mrpp-debug", TRUE)))

pkgTest <- function(x)
{
        if (!require(x,character.only = TRUE))
        {
                install.packages(x,dep=TRUE)
                if(!require(x,character.only = TRUE)) stop("Package not found")
        }
}

pkgTest("vegan")

print("Reading OTU table")
rawtable <- read.table("otu_table.txt", skip = 1, 
		comment.char = "", header = TRUE, row.names = 1, sep = "\t")

otutable <- t(rawtable[1:(ncol(rawtable) - 1)])

print("Reading mapping");
mapping <- t(read.table("mapping.txt", header = TRUE, comment.char = "", row.names = "X.SampleID", sep = "\t"))

# For non-numeric sample names, comment out the following line
colnames(mapping) <- paste("X", colnames(mapping), sep = "");

def.par <- par(no.readonly = TRUE)
layout(matrix(1:2, nr = 1))
pdf("mrpp.pdf")
sink("mrpp.txt", append = FALSE)
sink()
for (x in 1 : nrow(mapping)) {
	name <- rownames(mapping)[x]
	fac.len <- length(levels(factor(as.matrix(mapping[x,])))) 
	if (fac.len < 2 || fac.len >= ncol(mapping)) {
		print(paste("Ignoring", name, "because all values are identical/different."))
		next
	}

	print(paste("Computing MRPP for", name))
	m <- mapping[x, rownames(otutable)]
	otutable.mrpp <- mrpp(otutable, m)

	sink("mrpp.txt", append = TRUE)
	print(paste("MRPP for", name))
	print(otutable.mrpp)
	print(paste("T statistic : ", (otutable.mrpp$delta - otutable.mrpp$E.delta) / sd(otutable.mrpp$boot.deltas)))
	sink()

	print("Computing meta MDS")
	plot(otutable.ord <- metaMDS(otutable), type = "text", display = "sites", main = paste("MDS for", name))
	ordihull(otutable.ord, m)

	with(otutable.mrpp, {
		print("Producing histogram")
		fig.dist <- hist(boot.deltas, xlim = range(c(delta,boot.deltas)), main = paste("Test of Differences Among", name, "Groups"))
		abline(v = delta); 
		text(delta, 2*mean(fig.dist$counts), adj = -0.5, expression(bold(delta)), cex=1.5 )
	})
	par(def.par)
	print("Computing mean distances")
	otutable.bc <- vegdist(otutable)
	tryCatch(plot(meandist(otutable.bc, m), main = paste("Mean distances for", name)), error = function() next)
}
