#!/usr/bin/env Rscript
# Copyright 2011
#  Xingpeng Jiang <xingpengjiang@gmail.com>
#  Jonathan Dushoff <dushoff@mcmaster.ca>
#  Andre Masella <andre@masella.name>
options(error = quote(dump.frames("nmf-concordance-debug", TRUE)))

kstart <- 2  # start rank
nloop <- 100  # runs for each rank
nmf.method <- "brunet" # NMF method

source("@prefix@/share/@PACKAGE@/nmf.R")
#source("@prefix@/share/@PACKAGE@/biom.R")

#Pull in arguments
args <- commandArgs(trailingOnly = TRUE)

#Search within args for the biom flags
isBiomFile <- TRUE %in% (c("-B","-b","--biom", "--BIOM") %in% args)

#Clear out any flags from the command arguments
args <- args[ (args != "-b" & args != "-B" & args != "--biom" & args != "--BIOM") ]

#Search within args for the auto flag

autoCalc <- TRUE %in% (c("-a","-A","--auto","-auto") %in% args)

args <- args[ (args != "-a" & args != "-A" & args != "--auto" & args != "-auto") ]

#Read in and format otu table
print("Reading OTU table")
if ( isBiomFile ) {
#        otutable <- BIOM2table("otu_table.txt")
#        kend <- nrow(otutable) # endrank
        rawtable <- read.table("otu_table.tab", skip = 1,
        comment.char = "", header = TRUE, row.names = 1, sep = "\t")
        otutable <- t(rawtable[1:(ncol(rawtable) - 1)])
        kend <- ncol(rawtable) - 1 # end rank
} else {
        rawtable <- read.table("otu_table.txt", skip = 1,
        comment.char = "", header = TRUE, row.names = 1, sep = "\t")
        otutable <- t(rawtable[1:(ncol(rawtable) - 1)])
        kend <- ncol(rawtable) - 1 # end rank
}

print("Computing")
z <- apply(as.matrix(t(otutable)), 2, function(x) { x/sum(x) })
ad <- ConsensusFuzzyH(z, nmf.method = nmf.method, Rnmf = FALSE, kstart, kend, nloop, method = "square", ifseed = FALSE)

print("Plotting")
if (autoCalc) {
	pdf("nmf-concordance-auto.pdf")
} else {
	pdf("nmf-concordance.pdf")
}
print(ad$averdiff)
plot(kstart:kend, ad$averdiff, type = "l", xlab = "Degree", ylab = "Concordance")
points(kstart:kend, ad$averdiff, pch = 16)

#Only autocalculate for degrees larger than 2 (aq-nmf script won't let you do calculation on degrees 1 or 2)
if (length(ad$averdiff) >= 3) {
		mono = TRUE;
    for (i in 1:(length(ad$averdiff)-1) ) {
        if ( i > 2 ) {
            if ( ad$averdiff[i] >= ad$averdiff[i-1] && ad$averdiff[i] >= ad$averdiff[i+1] ) {
                print(paste("NMF Candidate degree:", i))
                if (autoCalc) {
                    if (isBiomFile) {
    		        		    system(paste("aq-nmf -B", i))
                    } else {
                        system(paste("aq-nmf", i))
                    }
                }
            }
        }
        #While we're looking through the plot, check for a consistently increasing line
        if ( ad$averdiff[i] >= ad$averdiff[i+1] ) {
           mono = FALSE;
        }
    }

    #If we have a monotonically increasing line, warn the user we probably can't do anything (though they need to check themselves)
    if ( mono ) {
        print("Monotonically increasing line. Data may be degenerate. Check nmf-concordance.pdf manually.")
    }
}
	

